[{"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/index.tsx":"1","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/App.tsx":"2","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/reportWebVitals.ts":"3","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/dashboard/dashboard.tsx":"4","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/log-in-page/log-in-page.tsx":"5","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sign-up-page/sign-up-page.tsx":"6","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/home-page/home-page.tsx":"7","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sidebar/sidebar.tsx":"8","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/WelcomeUserPage/welcome-user-page.tsx":"9","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/apiServise.tsx":"10","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/user-page/user-page.tsx":"11","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sentiment-analysis/sentiment-analysis.tsx":"12","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/header/header.tsx":"13"},{"size":500,"mtime":1611080931916,"results":"14","hashOfConfig":"15"},{"size":897,"mtime":1611585448624,"results":"16","hashOfConfig":"15"},{"size":425,"mtime":1610539309826,"results":"17","hashOfConfig":"15"},{"size":1044,"mtime":1613231280459,"results":"18","hashOfConfig":"15"},{"size":2108,"mtime":1613235633750,"results":"19","hashOfConfig":"15"},{"size":2736,"mtime":1613233256009,"results":"20","hashOfConfig":"15"},{"size":2763,"mtime":1613402039634,"results":"21","hashOfConfig":"15"},{"size":2582,"mtime":1613408717784,"results":"22","hashOfConfig":"15"},{"size":200,"mtime":1613403349269,"results":"23","hashOfConfig":"15"},{"size":1080,"mtime":1611056427214,"results":"24","hashOfConfig":"15"},{"size":2730,"mtime":1613483355158,"results":"25","hashOfConfig":"15"},{"size":1886,"mtime":1613482792407,"results":"26","hashOfConfig":"15"},{"size":624,"mtime":1613229028455,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1djeitl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/index.tsx",[],["58","59"],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/App.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/reportWebVitals.ts",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/dashboard/dashboard.tsx",["60"],"import styles from './Dashboard.module.css';\nimport { navigate, Link} from '@reach/router';\nimport Header from '../header/header';\nimport picture from './../../resources/undraw_Personal_notebook_re_d7dc.svg'\nfunction DashBoard(props: object) {\n  console.log(props);\n  function handleClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    navigate('/sign-up');\n  }\n  return (\n    <div className={styles.dashboard}>\n      <Header />\n      <div className={styles.welcomecontainer}>\n        <div className={styles.welcome}>WELCOME </div>\n        <div className={styles.dashcomponent}>\n          <img src={picture} alt='diary'></img>\n          <div className={styles.description}>\n            Mood is diary app that helps you track your mood by using sentiment\n            analysis.\n          </div>\n        </div>\n        <div className={styles.redirect}>\n          <Link className={styles.redirect} to='/sign-up'>\n            Sign up\n          </Link>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default DashBoard;\n","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/log-in-page/log-in-page.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sign-up-page/sign-up-page.tsx",["61"],"import { ChangeEvent, useState } from 'react';\nimport { navigate } from '@reach/router';\nimport Header from '../header/header';\nimport styles from './Sign-up-page.module.css'\nfunction SignUP() {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function handleFirstName(e: ChangeEvent<HTMLInputElement>) {\n    setFirstName(e.target.value);\n  }\n  function handleLastName(e: any) {\n    setLastName(e.target.value);\n  }\n  function handlePassword(e: any) {\n    setPassword(e.target.value);\n  }\n  function handleEmail(e: any) {\n    setEmail(e.target.value);\n  }\n  function handleSubmit(e: any) {\n    e.preventDefault();\n    const newUser: object = {\n      email: email,\n      firstName: firstName,\n      lastName: lastName,\n      password: password,\n    };\n    return  true;\n  }\n\n  return (\n    <div className={styles.main}>\n      <Header />\n      <div className={styles.container}>\n        <form\n          className={styles.form}\n          onSubmit={async (event) => {\n            const handeled = await handleSubmit(event);\n            if (handeled === true) navigate('/homepage/1');\n          }}\n        >\n          <div className={styles.header}>Sign up</div>\n          <div className={styles.inputcontainer}>\n            <div className={styles.request}>FIRST NAME: </div>\n            <input\n              type=\"text\"\n              name=\"FirstName\"\n              value={firstName}\n              onChange={handleFirstName}\n            />\n          </div>\n          <div className={styles.inputcontainer}>\n            <div className={styles.request}>LAST NAME:</div>\n            <input\n              type=\"text\"\n              name=\"LastName\"\n              value={lastName}\n              onChange={handleLastName}\n            />\n          </div>\n          <div className={styles.inputcontainer}>\n            <div className={styles.request}>EMAIL ADDRESS:</div>\n            <input\n              type=\"text\"\n              name=\"Email\"\n              value={email}\n              onChange={handleEmail}\n            />\n          </div>\n          <div className={styles.inputcontainer}>\n            <div className={styles.request}>CHOOSE PASSWORD:</div>\n            <input\n              type=\"password\"\n              name=\"Password\"\n              value={password}\n              onChange={handlePassword}\n            />\n          </div>\n          <button\n            className=\"redirect\"\n            type=\"submit\"\n            value=\"Submit\"\n            onChange={handleSubmit}\n          >\n            Create account\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUP;\n","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/home-page/home-page.tsx",["62"],"import Sidebar from './../sidebar/sidebar';\n\nimport Obj from './../../apiServise';\nimport { Diary } from './../../types';\nimport UserPage from './../user-page/user-page';\nimport React, { useEffect, useState } from 'react';\nimport WelcomeUserPage from '../WelcomeUserPage/welcome-user-page';\nimport styles from './Home-page.module.css'\n\nfunction Homepage() {\n  const [diaries, setDiaries] = useState<Diary[]>([]);\n  const [isLoaded, setLoaded] = useState<Boolean>(false);\n  const [pickedDiary, setPickedDiary] = useState<Diary | undefined>();\n\n  //----------------------------------------------------------------------------------------\n  const createDiary = async function (name: string) {\n    setLoaded(false);\n    const oldDiaries = diaries;\n    const data = await Obj.postEntrie({\n      diaryName: name,\n      user: 1,\n      entries: [{}],\n    });\n    setDiaries([...oldDiaries, data]);\n    setLoaded(true);\n  };\n  //---------------------------------------------------------------------------------------------------------------------\n  const addEntry = async function (diaryId: string, text: string) {\n    let oldEntries = diaries.filter((diary) => {\n      return diary._id === diaryId;\n    });\n    const date: Date = new Date();\n    const entry: {\n      date: Date;\n      text: string;\n    } = { date: date, text: text };\n    const entries = [...oldEntries[0].entries, entry];\n    const diary = await Obj.addEntry({ id: diaryId, entries });\n    setPickedDiary(diary);\n  };\n\n  const getEntries = function (diaryId: string) {\n    setLoaded(false);\n    const diary = diaries.find((diary) => {\n      return diary._id === diaryId;\n    });\n    setPickedDiary(diary);\n    setLoaded(true);\n    return diary;\n  };\n  console.log(diaries, 'HOME');\n  //---------------------------------------------------------------------------------------\n\n  useEffect(() => {\n    Obj.getDiaries().then((diaries) => {\n      setDiaries(diaries);\n      setLoaded(true);\n      if (isLoaded === true) console.log(diaries);\n    });\n  }, []);\n\n  //------------------------------------------------------------------------------------------------\n  return (\n    <div className={styles.wrapper}>\n      {isLoaded === true\n        ? [\n            <div>\n              {' '}\n              <div className={styles.homepage}>\n                <Sidebar\n                  createDiary={createDiary}\n                  getEntries={getEntries}\n                  diaries={diaries}\n                />\n                {pickedDiary !== undefined ? (\n                  <UserPage diary={pickedDiary} addEntry={addEntry} />\n                ) : (\n                  <WelcomeUserPage />\n                )}\n              </div>\n            </div>,\n          ]\n        : null}\n    </div>\n  );\n}\nexport default Homepage;\n","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sidebar/sidebar.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/WelcomeUserPage/welcome-user-page.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/apiServise.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/user-page/user-page.tsx",["63","64"],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sentiment-analysis/sentiment-analysis.tsx",["65","66","67"],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/header/header.tsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":7,"column":12,"nodeType":"74","messageId":"75","endLine":7,"endColumn":23},{"ruleId":"72","severity":1,"message":"76","line":25,"column":11,"nodeType":"74","messageId":"75","endLine":25,"endColumn":26},{"ruleId":"77","severity":1,"message":"78","line":60,"column":6,"nodeType":"79","endLine":60,"endColumn":8,"suggestions":"80"},{"ruleId":"72","severity":1,"message":"81","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"82","line":1,"column":35,"nodeType":"74","messageId":"75","endLine":1,"endColumn":42},{"ruleId":"72","severity":1,"message":"81","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"83","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":35,"column":26,"nodeType":"86","messageId":"87","endLine":35,"endColumn":28},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-unused-vars","'handleClick' is defined but never used.","Identifier","unusedVar","'newUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoaded'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'FC' is defined but never used.","'useMemo' is defined but never used.","'Moment' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [isLoaded]",{"range":"93","text":"94"},[2010,2012],"[isLoaded]"]