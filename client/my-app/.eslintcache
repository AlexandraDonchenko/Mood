[{"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/index.tsx":"1","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/App.tsx":"2","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/reportWebVitals.ts":"3","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/dashboard/dashboard.tsx":"4","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/log-in-page/log-in-page.tsx":"5","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sign-up-page/sign-up-page.tsx":"6","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/home-page/home-page.tsx":"7","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sidebar/sidebar.tsx":"8","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/WelcomeUserPage/welcome-user-page.tsx":"9","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/apiServise.tsx":"10","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/modal./modal.tsx":"11","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/user-page/user-page.tsx":"12"},{"size":500,"mtime":1610539309823,"results":"13","hashOfConfig":"14"},{"size":1251,"mtime":1610811258923,"results":"15","hashOfConfig":"14"},{"size":425,"mtime":1610539309826,"results":"16","hashOfConfig":"14"},{"size":168,"mtime":1610730388136,"results":"17","hashOfConfig":"14"},{"size":1328,"mtime":1610641312288,"results":"18","hashOfConfig":"14"},{"size":2043,"mtime":1610731998673,"results":"19","hashOfConfig":"14"},{"size":2474,"mtime":1610966585698,"results":"20","hashOfConfig":"14"},{"size":2326,"mtime":1610966160714,"results":"21","hashOfConfig":"14"},{"size":104,"mtime":1610632366386,"results":"22","hashOfConfig":"14"},{"size":1073,"mtime":1610963794358,"results":"23","hashOfConfig":"14"},{"size":570,"mtime":1610708541398,"results":"24","hashOfConfig":"14"},{"size":1785,"mtime":1610970630874,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1djeitl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/index.tsx",[],["54","55"],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/App.tsx",["56","57"],"import React from 'react';\nimport './App.css';\nimport { Router, Link, RouteComponentProps, Location } from '@reach/router';\nimport DashBoard from './components/dashboard/dashboard';\nimport LogIn from './components/log-in-page/log-in-page';\nimport SignUP from './components/sign-up-page/sign-up-page';\nimport Homepage from './components/home-page/home-page';\nimport Obj from './apiServise';\nconst test: string = 'TEST'; // variable to try to pass down by props\n\n//const test: string = 'Hello';\nconst Dash = (props: RouteComponentProps) => <DashBoard />;\nconst Login = (props: RouteComponentProps) => <LogIn />;\nconst SignUp = (props: RouteComponentProps) => <SignUP />;\nconst HomePage = (props: RouteComponentProps) => <Homepage />;\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header>\n        <Link to=\"/\" state={{ hello: test }}>\n          MOOOOOOOOOD\n        </Link>\n\n        {/* {console.log(testEntry())} */}\n        <Link to=\"/sign-up\">Sign up</Link>\n        <Link to=\"/log-in\">Log in</Link>\n      </header>\n      <Router>\n        <Login path=\"log-in/*\" />\n        <SignUp path=\"sign-up/*\" />\n        <Dash path=\"/\" />\n        <HomePage path=\"/homepage/:1\" />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/reportWebVitals.ts",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/dashboard/dashboard.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/log-in-page/log-in-page.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sign-up-page/sign-up-page.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/home-page/home-page.tsx",["58"],"import Sidebar from './../sidebar/sidebar';\nimport './home-page.css';\nimport Obj from './../../apiServise';\nimport { Diary } from './../../types';\nimport UserPage from './../user-page/user-page';\nimport React, { useEffect, useState } from 'react';\n\nfunction Homepage() {\n  const [diaries, setDiaries] = useState<Diary[]>([]);\n  const [isLoaded, setLoaded] = useState<Boolean>(false);\n  const [pickedDiary, setPickedDiary] = useState<Diary | undefined>();\n\n  //----------------------------------------------------------------------------------------\n  const createDiary = async function (name: string) {\n    setLoaded(false);\n    const oldDiaries = diaries;\n    const data = await Obj.postEntrie({\n      diaryName: name,\n      user: 1,\n      entries: [{}],\n    });\n    setDiaries([...oldDiaries, data]);\n    setLoaded(true);\n  };\n  const addEntry = async function (diaryId: string, text: string) {\n    setLoaded(false);\n    let oldEntries = diaries.filter((diary) => {\n      return diary._id === diaryId;\n    });\n    const date: Date = new Date();\n    const entry: {\n      date: Date;\n      text: string;\n    } = { date: date, text: text };\n    const entries = [...oldEntries[0].entries, entry];\n    Obj.addEntry({ id: diaryId, entries });\n    setLoaded(true);\n  };\n  const getEntries = function (diaryId: string) {\n    setLoaded(false);\n    const diary = diaries.filter((diary) => {\n      return diary._id === diaryId;\n    });\n    setPickedDiary(diary[0]);\n    setLoaded(true);\n    return diary;\n  };\n  //---------------------------------------------------------------------------------------\n  useEffect(() => {\n    Obj.getDiaries().then((diaries) => {\n      setDiaries(diaries);\n      setLoaded(true);\n      if (isLoaded === true) console.log(diaries);\n    });\n  }, []);\n  useEffect(() => {\n    Obj.getDiaries().then((diaries) => {\n      setDiaries(diaries);\n      setLoaded(true);\n      if (isLoaded === true) console.log(diaries);\n    });\n  }, [isLoaded]);\n\n  //------------------------------------------------------------------------------------------------\n  return (\n    <div className=\"homepage\">\n      {isLoaded === true\n        ? [\n            <div>\n              <Sidebar\n                createDiary={createDiary}\n                getEntries={getEntries}\n                diaries={diaries}\n              />\n              <UserPage diary={pickedDiary} addEntry={addEntry} />\n            </div>,\n          ]\n        : null}\n    </div>\n  );\n}\nexport default Homepage;\n","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sidebar/sidebar.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/WelcomeUserPage/welcome-user-page.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/apiServise.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/modal./modal.tsx",[],["59","60"],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/user-page/user-page.tsx",["61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":45,"nodeType":"69","messageId":"70","endLine":3,"endColumn":53},{"ruleId":"67","severity":1,"message":"71","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":11},{"ruleId":"72","severity":1,"message":"73","line":55,"column":6,"nodeType":"74","endLine":55,"endColumn":8,"suggestions":"75"},{"ruleId":"63","replacedBy":"76"},{"ruleId":"65","replacedBy":"77"},{"ruleId":"67","severity":1,"message":"78","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"79","line":1,"column":24,"nodeType":"69","messageId":"70","endLine":1,"endColumn":33},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'Location' is defined but never used.","Identifier","unusedVar","'Obj' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoaded'. Either include it or remove the dependency array.","ArrayExpression",["82"],["80"],["81"],"'FC' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [isLoaded]",{"range":"85","text":"86"},[1768,1770],"[isLoaded]"]