[{"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/index.tsx":"1","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/App.tsx":"2","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/reportWebVitals.ts":"3","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/dashboard/dashboard.tsx":"4","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/log-in-page/log-in-page.tsx":"5","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sign-up-page/sign-up-page.tsx":"6","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/home-page/home-page.tsx":"7","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sidebar/sidebar.tsx":"8","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/WelcomeUserPage/welcome-user-page.tsx":"9","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/apiServise.tsx":"10","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/user-page/user-page.tsx":"11","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sentiment-analysis/sentiment-analysis.tsx":"12"},{"size":500,"mtime":1610539309823,"results":"13","hashOfConfig":"14"},{"size":1433,"mtime":1610994944764,"results":"15","hashOfConfig":"14"},{"size":425,"mtime":1610539309826,"results":"16","hashOfConfig":"14"},{"size":698,"mtime":1610995780541,"results":"17","hashOfConfig":"14"},{"size":1744,"mtime":1611004889314,"results":"18","hashOfConfig":"14"},{"size":2043,"mtime":1610731998673,"results":"19","hashOfConfig":"14"},{"size":3196,"mtime":1611055520971,"results":"20","hashOfConfig":"14"},{"size":2326,"mtime":1610966160714,"results":"21","hashOfConfig":"14"},{"size":104,"mtime":1610632366386,"results":"22","hashOfConfig":"14"},{"size":1086,"mtime":1611054320798,"results":"23","hashOfConfig":"14"},{"size":2075,"mtime":1611055023823,"results":"24","hashOfConfig":"14"},{"size":1205,"mtime":1610988644269,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1djeitl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/index.tsx",[],["53","54"],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/App.tsx",["55"],"import React from 'react';\nimport './App.css';\nimport { Router, Link, RouteComponentProps, Location } from '@reach/router';\nimport DashBoard from './components/dashboard/dashboard';\nimport LogIn from './components/log-in-page/log-in-page';\nimport SignUP from './components/sign-up-page/sign-up-page';\nimport Homepage from './components/home-page/home-page';\nimport './App.css';\nconst test: string = 'TEST'; // variable to try to pass down by props\n\n//const test: string = 'Hello';\nconst Dash = (props: RouteComponentProps) => <DashBoard />;\nconst Login = (props: RouteComponentProps) => <LogIn />;\nconst SignUp = (props: RouteComponentProps) => <SignUP />;\nconst HomePage = (props: RouteComponentProps) => <Homepage />;\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"logo\">\n          <Link to=\"/\" className=\"text-link\" state={{ hello: test }}>\n            MOOOOOOOOOD\n          </Link>\n        </div>\n        <div className=\"buttons\">\n          <Link to=\"/sign-up\" className=\"text-link\">\n            Sign up\n          </Link>\n          <Link to=\"/log-in\" className=\"text-link\">\n            Log in\n          </Link>\n        </div>\n      </header>\n      <Router>\n        <Login path=\"log-in/*\" />\n        <SignUp path=\"sign-up/*\" />\n        <Dash path=\"/\" />\n        <HomePage path=\"/homepage/:1\" />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/reportWebVitals.ts",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/dashboard/dashboard.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/log-in-page/log-in-page.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sign-up-page/sign-up-page.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/home-page/home-page.tsx",["56","57","58"],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sidebar/sidebar.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/WelcomeUserPage/welcome-user-page.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/apiServise.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/user-page/user-page.tsx",["59","60"],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sentiment-analysis/sentiment-analysis.tsx",["61"],"import { FC } from 'react';\nimport React from 'react';\nimport { Entry } from './../../types';\nimport './sentiment-analysis.css';\nimport Moment from 'moment';\n\ninterface Props {\n  entries: Entry[];\n}\nconst SentimentAnalysis: React.FC<Props> = ({ entries }) => {\n  function convertToNum(el: string) {\n    return el === 'Positive' ? 1 : el === 'Negative' ? -1 : 0;\n  }\n  const arr = entries.slice(1);\n\n  const sentiments = arr.map((entry) => {\n    let number: number = 0;\n    const senArr = entry.sentiment;\n    senArr?.forEach((element) => {\n      number = number + convertToNum(element);\n    });\n    if (senArr) {\n      return {\n        date: entry.date,\n        sentriment: number / senArr.length,\n      };\n    } else return null;\n  });\n  return (\n    <div className=\"outerBox\">\n      {sentiments.map((item) => {\n        return (\n          <div>\n            <div\n              className={\n                item !== null && item.sentriment > 0 ? 'goodDay' : 'badDay'\n              }\n            >\n              {Moment(item !== null ? item.date : null).format('MMMM Do, YYYY')}\n            </div>\n          </div>\n        );\n      })}\n      <div></div>\n    </div>\n  );\n};\n\nexport default SentimentAnalysis;\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":3,"column":45,"nodeType":"68","messageId":"69","endLine":3,"endColumn":53},{"ruleId":"66","severity":1,"message":"70","line":12,"column":10,"nodeType":"68","messageId":"69","endLine":12,"endColumn":20},{"ruleId":"66","severity":1,"message":"71","line":12,"column":22,"nodeType":"68","messageId":"69","endLine":12,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":68,"column":6,"nodeType":"74","endLine":68,"endColumn":8,"suggestions":"75"},{"ruleId":"66","severity":1,"message":"76","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"77","line":1,"column":35,"nodeType":"68","messageId":"69","endLine":1,"endColumn":42},{"ruleId":"66","severity":1,"message":"76","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":12},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'Location' is defined but never used.","Identifier","unusedVar","'entryAdded' is assigned a value but never used.","'setEntryAdded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoaded'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'FC' is defined but never used.","'useMemo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [isLoaded]",{"range":"83","text":"84"},[2362,2364],"[isLoaded]"]