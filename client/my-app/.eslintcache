[{"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/index.tsx":"1","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/App.tsx":"2","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/reportWebVitals.ts":"3","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/dashboard/dashboard.tsx":"4","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/log-in-page/log-in-page.tsx":"5","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sign-up-page/sign-up-page.tsx":"6","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/home-page/home-page.tsx":"7","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sidebar/sidebar.tsx":"8","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/WelcomeUserPage/welcome-user-page.tsx":"9","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/apiServise.tsx":"10","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/user-page/user-page.tsx":"11","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sentiment-analysis/sentiment-analysis.tsx":"12","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/header.tsx":"13","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/header-two.tsx":"14"},{"size":500,"mtime":1611080931916,"results":"15","hashOfConfig":"16"},{"size":996,"mtime":1611081408221,"results":"17","hashOfConfig":"16"},{"size":425,"mtime":1610539309826,"results":"18","hashOfConfig":"16"},{"size":858,"mtime":1611081288098,"results":"19","hashOfConfig":"16"},{"size":2027,"mtime":1611082787629,"results":"20","hashOfConfig":"16"},{"size":2631,"mtime":1611082705976,"results":"21","hashOfConfig":"16"},{"size":2806,"mtime":1611081926812,"results":"22","hashOfConfig":"16"},{"size":2632,"mtime":1611085451616,"results":"23","hashOfConfig":"16"},{"size":167,"mtime":1611065788892,"results":"24","hashOfConfig":"16"},{"size":1080,"mtime":1611056427214,"results":"25","hashOfConfig":"16"},{"size":2640,"mtime":1611084896759,"results":"26","hashOfConfig":"16"},{"size":1427,"mtime":1611078647082,"results":"27","hashOfConfig":"16"},{"size":496,"mtime":1611081697438,"results":"28","hashOfConfig":"16"},{"size":293,"mtime":1611082150409,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1djeitl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/index.tsx",[],["62","63"],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/App.tsx",["64","65","66"],"import React from 'react';\nimport './App.css';\nimport { Router, Link, RouteComponentProps, Location } from '@reach/router';\nimport DashBoard from './components/dashboard/dashboard';\nimport LogIn from './components/log-in-page/log-in-page';\nimport SignUP from './components/sign-up-page/sign-up-page';\nimport Homepage from './components/home-page/home-page';\nimport './App.css';\nconst test: string = 'TEST'; // variable to try to pass down by props\n\n//const test: string = 'Hello';\nconst Dash = (props: RouteComponentProps) => <DashBoard />;\nconst Login = (props: RouteComponentProps) => <LogIn />;\nconst SignUp = (props: RouteComponentProps) => <SignUP />;\nconst HomePage = (props: RouteComponentProps) => <Homepage />;\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Login path=\"log-in/*\" />\n        <SignUp path=\"sign-up/*\" />\n        <Dash path=\"/\" />\n        <HomePage path=\"/homepage/:1\" />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/reportWebVitals.ts",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/dashboard/dashboard.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/log-in-page/log-in-page.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sign-up-page/sign-up-page.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/home-page/home-page.tsx",["67"],"import Sidebar from './../sidebar/sidebar';\nimport './home-page.css';\nimport Obj from './../../apiServise';\nimport { Diary } from './../../types';\nimport UserPage from './../user-page/user-page';\nimport React, { useEffect, useState } from 'react';\nimport WelcomeUserPage from '../WelcomeUserPage/welcome-user-page';\nimport HeaderTwo from './../../header-two';\n\nfunction Homepage() {\n  const [diaries, setDiaries] = useState<Diary[]>([]);\n  const [isLoaded, setLoaded] = useState<Boolean>(false);\n  const [pickedDiary, setPickedDiary] = useState<Diary | undefined>();\n\n  //----------------------------------------------------------------------------------------\n  const createDiary = async function (name: string) {\n    setLoaded(false);\n    const oldDiaries = diaries;\n    const data = await Obj.postEntrie({\n      diaryName: name,\n      user: 1,\n      entries: [{}],\n    });\n    setDiaries([...oldDiaries, data]);\n    setLoaded(true);\n  };\n  //---------------------------------------------------------------------------------------------------------------------\n  const addEntry = async function (diaryId: string, text: string) {\n    let oldEntries = diaries.filter((diary) => {\n      return diary._id === diaryId;\n    });\n    const date: Date = new Date();\n    const entry: {\n      date: Date;\n      text: string;\n    } = { date: date, text: text };\n    const entries = [...oldEntries[0].entries, entry];\n    const diary = await Obj.addEntry({ id: diaryId, entries });\n    setPickedDiary(diary);\n  };\n\n  const getEntries = function (diaryId: string) {\n    setLoaded(false);\n    const diary = diaries.find((diary) => {\n      return diary._id === diaryId;\n    });\n    setPickedDiary(diary);\n    setLoaded(true);\n    return diary;\n  };\n  console.log(diaries, 'HOME');\n  //---------------------------------------------------------------------------------------\n\n  useEffect(() => {\n    Obj.getDiaries().then((diaries) => {\n      setDiaries(diaries);\n      setLoaded(true);\n      if (isLoaded === true) console.log(diaries);\n    });\n  }, []);\n\n  //------------------------------------------------------------------------------------------------\n  return (\n    <div className=\"homepage\">\n      {isLoaded === true\n        ? [\n            <div>\n              {' '}\n              <HeaderTwo />\n              <div className=\"home-page-2\">\n                <Sidebar\n                  createDiary={createDiary}\n                  getEntries={getEntries}\n                  diaries={diaries}\n                />\n                {pickedDiary !== undefined ? (\n                  <UserPage diary={pickedDiary} addEntry={addEntry} />\n                ) : (\n                  <WelcomeUserPage />\n                )}\n              </div>\n            </div>,\n          ]\n        : null}\n    </div>\n  );\n}\nexport default Homepage;\n","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sidebar/sidebar.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/WelcomeUserPage/welcome-user-page.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/apiServise.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/user-page/user-page.tsx",["68","69"],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/components/sentiment-analysis/sentiment-analysis.tsx",["70"],"import { FC } from 'react';\nimport React from 'react';\nimport { Entry } from './../../types';\nimport './sentiment-analysis.css';\nimport Moment from 'moment';\n\ninterface Props {\n  entries: Entry[];\n}\nconst SentimentAnalysis: React.FC<Props> = ({ entries }) => {\n  function convertToNum(el: string) {\n    return el === 'Positive' ? 1 : el === 'Negative' ? -1 : 0;\n  }\n  const arr = entries.slice(1);\n\n  const sentiments = arr.map((entry) => {\n    let number: number = 0;\n    const senArr = entry.sentiment;\n    senArr?.forEach((element) => {\n      number = number + convertToNum(element);\n    });\n    if (senArr) {\n      return {\n        date: entry.date,\n        sentriment: number / senArr.length,\n      };\n    } else return null;\n  });\n  return (\n    <div className=\"outerBox\">\n      <div className=\"last-analysis\">\n        YOUR SENTIMENT ANALYSIS FOR LAST 14 DAYS\n      </div>\n      <div className=\"inner-box\">\n        {sentiments.map((item) => {\n          return (\n            <div>\n              <div\n                className={\n                  item !== null && item.sentriment > 0 ? 'goodDay' : 'badDay'\n                }\n              >\n                <div className=\"date-in-bubble\">\n                  {Moment(item !== null ? item.date : null).format('DD.MM ')}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SentimentAnalysis;\n","/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/header.tsx",[],"/Users/alexandradonchenko/Documents/Coding/Codeworks/Solo-project/Mood/client/my-app/src/header-two.tsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":18,"nodeType":"77","messageId":"78","endLine":3,"endColumn":22},{"ruleId":"75","severity":1,"message":"79","line":3,"column":45,"nodeType":"77","messageId":"78","endLine":3,"endColumn":53},{"ruleId":"75","severity":1,"message":"80","line":9,"column":7,"nodeType":"77","messageId":"78","endLine":9,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":60,"column":6,"nodeType":"83","endLine":60,"endColumn":8,"suggestions":"84"},{"ruleId":"75","severity":1,"message":"85","line":1,"column":10,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"86","line":1,"column":35,"nodeType":"77","messageId":"78","endLine":1,"endColumn":42},{"ruleId":"75","severity":1,"message":"85","line":1,"column":10,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Location' is defined but never used.","'test' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoaded'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'FC' is defined but never used.","'useMemo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [isLoaded]",{"range":"92","text":"93"},[2035,2037],"[isLoaded]"]